<form id="form">
	<div class="form-group">
		<label for="PaciNom">Nome</label>
		<input class="form-control" type="text" id="PaciNom" name="PaciNom" maxlength="50" />
	</div>

	<div>
		<label for="PaciNum">Numero de telefone</label>
		<input type="text" id="PaciNum" name="PaciNum" maxlength="15" />
	</div>

	<div>
		<label for="PaciCPF">CPF</label>
		<input type="text" id="PaciCPF" name="PaciCPF" maxlength="50" />
	</div>

	<div>
		<label for="PaciEnd">Endereço</label>
		<input type="text" id="PaciEnd" name="PaciEnd" maxlength="50" />
	</div>

	<div>
		<label for="PaciEma">E-mail</label>
		<input type="email" id="PaciEma" name="PaciEma" maxlength="50" />
	</div>

	<div>
		<label for="PaciCon">Convênio</label>
		<input type="text" id="PaciCon" name="PaciCon" maxlength="50" />
	</div>

	<div>
		<button type="submit" class="btn btn-success">Criar Pessoa</button>
	</div>
</form>

<script type="text/javascript">
	$("#PaciCPF").mask("000.000.000-00");
	maskMobilePhone("#PaciNum");

	$("#form").validate({
		rules: {
			// Aqui o que vale é o name, não o id!
			PaciNom: {
				required: true
			},
			PaciNum: {
				required: true,
				minlength: 14
			},
			PaciCPF: {
				required: true,
				cpf: true
			},
			PaciEnd: {
				required: true
			},
			PaciEma: {
				required: true
			},
			PaciCon: {
				required: false
			}
		},

		submitHandler: function (form) {
			criarPessoa(form);
		}
	});

	async function criarPessoa(form) {
		try {
			let opcoes = {
				method: "POST",
				body: new FormData(form)
			};

			let response = await fetch("/api/pessoa/criar", opcoes);

			if (response.ok) {
				// Limpa os campos para facilitar a criação da próxima pessoa.
				resetForm(form);
				alert("Pessoa criada com sucesso!");
			} else {
				alert("Erro ao criar a pessoa!");
			}
		} catch (ex) {
			alert("Erro de rede: " + ex.message);
		}
	}

</script>
